{"version":3,"sources":["App.tsx","components/GoodsList.tsx","index.tsx"],"names":["SortType","GoodsList","visibleGoods","map","good","goodsFromServer","App","useState","isReversed","setReverse","NONE","sortType","setSortType","isChanged","setChanging","goods","ALPHABET","sort","g1","g2","localeCompare","LENGTH","length","reverse","console","log","getReorderedGoods","className","type","classNames","onClick","current","style","visibility","ReactDOM","render","document","getElementById"],"mappings":"6KAoBKA,E,0ECdQC,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,aAAH,OACxC,mCACGA,EAAaC,KAAI,SAAAC,GAAI,OACpB,oBACE,UAAQ,OADV,SAIGA,GAFIA,SDJAC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGL,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAqCE,IAAMM,EAAgB,WAC3B,MAAiCC,oBAAS,GAA1C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAASP,EAASU,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAiCL,oBAAS,GAA1C,mBAAOM,EAAP,KAAkBC,EAAlB,KAsBMZ,EAlDD,SACLa,EADK,GAGJ,IADCJ,EACF,EADEA,SAAUH,EACZ,EADYA,WAGNN,EAAY,YAAOa,GAiBzB,OAfIJ,IAAaX,EAASgB,UACxBd,EAAae,MAAK,SAACC,EAAIC,GAAL,OAAYD,EAAGE,cAAcD,MAG7CR,IAAaX,EAASqB,QACxBnB,EAAae,MAAK,SAACC,EAAIC,GAAL,OAAYD,EAAGI,OAASH,EAAGG,UAG3Cd,GACFN,EAAaqB,UAIfC,QAAQC,IAAId,EAAUH,GAEfN,EA4BcwB,CAAkBrB,EACrC,CAAEM,WAAUH,eAEd,OACE,sBAAKmB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAYlB,IAAaX,EAASgB,WAEtCc,QAhCe,WACrBlB,EAAYZ,EAASgB,UACrBF,GAAY,IAwBR,iCAWA,wBACEc,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,WAAYlB,IAAaX,EAASqB,SAEtCS,QAtCa,WACnBlB,EAAYZ,EAASqB,QACrBP,GAAY,IA8BR,4BAWA,wBACEc,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,YAA2B,IAAfrB,IAEhBsB,QA5CY,WAClBrB,GAAW,SAAAsB,GAAO,OAAKA,MAqCnB,qBAWA,wBACEH,KAAK,SACLD,UAAU,4BACVG,QAhDa,WACnBlB,EAAYZ,EAASU,MACrBD,GAAW,GACXK,GAAY,IA8CNkB,MAAQnB,GAAaL,EACjB,CAAEyB,WAAY,WACd,CAAEA,WAAY,UANpB,sBAYF,6BACE,6BACE,cAAC,EAAD,CAAW/B,aAAcA,YEpInCgC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.2a556405.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\nimport React, { useState } from 'react';\n\nimport { GoodsList } from './components/GoodsList';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  if (sortType === SortType.ALPHABET) {\n    visibleGoods.sort((g1, g2) => g1.localeCompare(g2));\n  }\n\n  if (sortType === SortType.LENGTH) {\n    visibleGoods.sort((g1, g2) => g1.length - g2.length);\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setReverse] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const [isChanged, setChanging] = useState(false);\n\n  const sortByAlphabet = () => {\n    setSortType(SortType.ALPHABET);\n    setChanging(true);\n  };\n\n  const sortByLength = () => {\n    setSortType(SortType.LENGTH);\n    setChanging(true);\n  };\n\n  const reverseList = () => {\n    setReverse(current => !current);\n  };\n\n  const resetOptions = () => {\n    setSortType(SortType.NONE);\n    setReverse(false);\n    setChanging(false);\n  };\n\n  const visibleGoods = getReorderedGoods(goodsFromServer,\n    { sortType, isReversed });\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-info',\n            { 'is-light': sortType !== SortType.ALPHABET },\n          )}\n          onClick={sortByAlphabet}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-success',\n            { 'is-light': sortType !== SortType.LENGTH },\n          )}\n          onClick={sortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-warning',\n            { 'is-light': isReversed !== true },\n          )}\n          onClick={reverseList}\n        >\n          Reverse\n        </button>\n\n        <button\n          type=\"button\"\n          className=\"button is-danger is-light\"\n          onClick={resetOptions}\n          style={(isChanged || isReversed)\n            ? { visibility: 'visible' }\n            : { visibility: 'hidden' }}\n        >\n          Reset\n        </button>\n      </div>\n\n      <ul>\n        <ul>\n          <GoodsList visibleGoods={visibleGoods} />\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  visibleGoods: string[];\n};\n\nexport const GoodsList: React.FC<Props> = ({ visibleGoods }) => (\n  <>\n    {visibleGoods.map(good => (\n      <li\n        data-cy=\"Good\"\n        key={good}\n      >\n        {good}\n      </li>\n    ))}\n  </>\n);\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}